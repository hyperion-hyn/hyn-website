{"version":3,"sources":["serviceWorker.js","components/Start.js","components/Running.js","components/Result.js","actions/actionTypes.js","actions/process.js","const/consts.js","locale/index.js","locale/en_US.js","locale/zh_CN.js","containers/main.js","actions/localeActions.js","withRoot.js","reducers/userReducer.js","reducers/processReducer.js","reducers/localesReducer.js","reducers/index.js","services/api.js","geomaths/tilemath.js","util/util.js","benchmark/benchmark.js","epics/index.js","epics/userEpics.js","epics/processEpics.js","store/configureStore.js","connectedIntlProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","Start","state","selectedSampleId","_handleChange","name","event","_this","setState","parseInt","target","value","_launcher","sampleId","props","sampleCoords","id","launch","_this$props","this","classes","intl","react_default","a","createElement","className","root","FormControl_default","formControl","FormHelperText_default","selectLabel","component","index_es","NativeSelect_default","onChange","selectEmpty","map","sample","key","concat","formatMessage","intlId","Fab_default","onClick","color","aria-label","launcher","Component","withStyles","theme","display","flexDirection","alignItems","minWidth","marginTop","marginRight","fontSize","margin","spacing","unit","width","height","fontWeight","injectIntl","Running","scrollTop","scrollToBottom","messagesEnd","scrollIntoView","behavior","onScroll","currentTarget","messagesBox","scrollHeight","clientHeight","_this2","testingItems","testingSample","requestNum","progress","length","toFixed","tipTitle","values","where","coordinate","latitude","longitude","progressBox","CircularProgress_default","progressBarBg","size","variant","progressBar","progressLabel","detailBox","ref","el","item","resClass","duration","green","warn","stateTag","error","gray","testItem","Chip_default","fromType","label","type","style","url","position","justifyContent","left","top","transform","marginLeft","padding","overflow","backgroundColor","Result","getOption","testResult","title","text","tooltip","trigger","formatter","datas","res","split","legend","data","grid","right","bottom","containLabel","xAxis","boundaryGap","nameLocation","nameTextStyle","nameGap","splitLine","show","list","i","push","yAxis","axisLabel","series","itemStyle","borderColor","smooth","symbolOffset","map3Data","map3","stack","normal","barBorderColor","emphasis","barWidth","osmData","osm","barGap","_this$props2","testAgain","lib_default","option","notMerge","Button_default","btnTestAgain","paddingTop","REQUEST_CHANGE_USER_NAME","RECEIVED_USER_NAME","REQUEST_USER_NAME_FAIL","CANCEL_REQUEST_USER_NAME","ADD_USER_LOCATION_COORDINATE","BENCHMARK","PRE_START","TICK_RUNNING_ITEM","TICK_CALCULATE_RESULT","TICK_ERROR_ITEM","TICK_FINISH_ITEM","FINISH_BENCKMARK","TEST_AGAIN","CHANGE_LANGUAGE","tickFinishItem","ActionTypes","finishBenchmark","maxLevel","CONSTS","PROCESS_STATE_START","PROCESS_STATE_RUNNING","PROCESS_STATE_FINISH","supportedLocales","lang","desc","messages","selectLocationLabel","start","testRunningLabel","compareResult","avgTime","minTime","maxTime","myPosition","loadTime","fineness","BandungCityPark","BandungShoppingCenter","JakartaMilitaryMuseum","JakartaGBKS","addLocaleData","Object","toConsumableArray","en","zh","BootstrapInput","input","textAlign","InputBase","Main","open","_launch","selectedId","sampleMatchList","process","filter","benchmark","_testAgain","_getLocation","navigator","geolocation","getCurrentPosition","userCoordinateItem","coords","addUserLocationSample","console","log","handleLanguageChange","changeLanguage","handleClose","handleOpen","setTimeout","stepView","locales","components_Start","components_Running","components_Result","AppBar_default","Toolbar_default","src","alt","logoImg","Typography_default","grow","description","languageFormControl","Select_default","onClose","onOpen","IconComponent","locale","MenuItem_default","content","connect","ownProps","userName","user","userNameState","userSample","flexGrow","createMuiTheme","typography","useNextVariants","withRoot","styles","CssBaseline_default","userState","loading","errorMsg","canceled","processState","sessionStorage","getItem","language","selectedLocale","findLocale","localeState","objectSpread","combineReducers","arguments","undefined","action","payload","splice","unshift","searchItem","findTestingItemIdx","types","levelVar","forEach","z","testingItemsForCharts","api","Observable","fetch","mode","pipe","delay","ret","ramdom","Math","random","Error","Tile","x","y","lat","long","classCallCheck","createClass","lon","zoom","floor","pow","tan","PI","cos","lat2tile","n","atan","exp","tile2lat","newTileWithLatLong","tile","deg2num","hashCode","s","h","l","charCodeAt","fetchObs","from","fetch_promise","timeout","abort_fn","abort_promise","Promise","resolve","reject","abortable_promise","race","_fetch","Date","getTime","cache","then","what","newResultItemByUrlAndZ","TileTestTask","requestTimes","range","concatMap","of","osmTileUrl","map3TileUrl","getResourceDuration","resource","responseEnd","startTime","newResultItemByUrl","splitTarget","t","urls","tick","combineEpics","actions$","ofType","mergeMap","toUpperCase","takeUntil","catchError","message","state$","performance","clearResourceTimings","setResourceTimingBufferSize","tiles","level","generateTestTiles","apply","num","act","params","ip","coordinates","response_time","method","headers","Headers","Content-Type","body","JSON","stringify","json","postResult","calculateItemTiming","tickErrorItem","emitter","retryTimes","calculateFun","resources","getEntriesByType","includes","resourceTimingDuration","next","complete","epicMiddleware","createEpicMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","_state$locales","IntlProvider","store","createStore","rootReducer","applyMiddleware","run","rootEpic","configureStore","App","es","connectedIntlProvider","BrowserRouter","basename","Switch","Route","exact","path","NoMatch","_ref","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae70a1b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react'\nimport {withStyles} from \"@material-ui/core\";\nimport * as PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Fab from \"@material-ui/core/Fab\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\n\nclass Start extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    launch: PropTypes.func,\n    selectedSampleId: PropTypes.number,\n    sampleCoords: PropTypes.array\n  }\n\n  state = {\n    selectedSampleId: 0\n  }\n\n  _handleChange = name => event => {\n    this.setState({selectedSampleId: parseInt(event.target.value)})\n  }\n\n  _launcher = () => {\n    let sampleId = this.state.selectedSampleId\n    if (sampleId === 0) {\n      sampleId = this.props.sampleCoords[0].id\n    }\n    this.props.launch(parseInt(sampleId))\n  }\n\n  // componentDidMount() {\n    // this.setState({selectedSampleId: this.props.selectedSampleId})\n  // }\n\n  render() {\n    const {classes, sampleCoords, intl} = this.props;\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          <FormHelperText className={classes.selectLabel} component={'div'}>\n            <FormattedMessage id='selectLocationLabel'/>\n          </FormHelperText>\n          <NativeSelect\n            value={this.state.selectedSampleId}\n            onChange={this._handleChange()}\n            name=\"sampleCoordinate\"\n            className={classes.selectEmpty}\n          >\n            {\n              sampleCoords.map(sample => {\n                return <option key={sample.id}\n                               value={sample.id}>{`${intl.formatMessage({id: sample.intlId})}`}</option>\n              })\n            }\n          </NativeSelect>\n        </FormControl>\n        <Fab onClick={this._launcher} color=\"secondary\" aria-label=\"Add\"\n             className={classes.launcher}>\n          <FormattedMessage id='start'/>\n        </Fab>\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  formControl: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    minWidth: 200,\n    marginTop: '50px'\n  },\n  selectLabel: {\n    marginRight: '20px',\n    fontSize: '16px',\n    color: '#666',\n  },\n  selectEmpty: {},\n  launcher: {\n    margin: theme.spacing.unit,\n    width: '100px',\n    height: '100px',\n    color: 'white',\n    marginTop: '60px',\n    fontSize: '20px',\n    fontWeight: 400\n  }\n})\n\nexport default withStyles(styles)(injectIntl(Start))","import React, {Component} from 'react'\nimport {withStyles} from \"@material-ui/core\";\nimport * as PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\n\nclass Running extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    testingItems: PropTypes.array,\n    testingSample: PropTypes.object,\n    requestNum: PropTypes.number\n  }\n\n  scrollTop = 0\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({behavior: \"smooth\"});\n  }\n\n  componentDidUpdate() {\n    if (this.messagesBox.scrollHeight - this.messagesBox.clientHeight - 70 <= this.scrollTop) {\n      this.scrollToBottom();\n    }\n  }\n\n  onScroll = (event) => {\n    this.scrollTop = event.currentTarget.scrollTop\n  }\n\n  render() {\n    const {classes, testingItems, testingSample, requestNum, intl} = this.props;\n    let finishNum = testingItems.length\n    let progress = (finishNum / requestNum * 100).toFixed(1)\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.tipTitle}>\n          <FormattedMessage\n            id=\"testRunningLabel\"\n            values={{\n              where: <font\n                color={'#232323'}> [{`${intl.formatMessage({id: testingSample.intlId})} ${testingSample.coordinate.latitude},${testingSample.coordinate.longitude}`}] </font>\n            }}\n          />\n        </div>\n        <div className={classes.progressBox}>\n          <CircularProgress className={classes.progressBarBg} size={100} variant={'static'}\n                            value={100} color={'inherit'}/>\n          <CircularProgress className={classes.progressBar} size={100}\n                            variant={progress > 99 ? 'indeterminate' : 'static'}\n                            value={parseInt(progress)}/>\n          <div className={classes.progressLabel}>{progress}%</div>\n        </div>\n        <div className={classes.detailBox} onScroll={this.onScroll} ref={(el) => {\n          this.messagesBox = el;\n        }}>\n          {\n            testingItems.map(item => {\n              let resClass = item.duration < 100 ? classes.green : classes.warn\n              let stateTag = item.state === 'finish' ?\n                <div\n                  className={resClass}> {parseInt(item.duration)}ms</div> : (item.state === 'error' ?\n                  <div className={classes.error}>error</div> :\n                  <div className={classes.gray}>running...</div>)\n              return (\n                <div className={classes.testItem} key={item.id}>\n                  <Chip className={classes.fromType}\n                        label={item.type}\n                        color={item.type === 'map3' ? 'primary' : 'secondary'}\n                  />\n                  <div style={{fontSize: '14px', color: '#999'}}>{item.url} </div>\n                  {stateTag}\n                </div>\n              )\n            })\n          }\n          <div ref={(el) => {\n            this.messagesEnd = el;\n          }}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  root: {},\n  tipTitle: {\n    margin: '16px',\n    color: '#666'\n  },\n  progressBox: {\n    position: 'relative',\n    marginTop: '24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  progressBar: {\n    // position: 'absolute',\n    // left: '50%',\n    // top: '50%',\n    // transform: 'translate(-50%, -50%) important!',\n  },\n  progressBarBg: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%) !important',\n    color: '#ccc',\n  },\n  progressLabel: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '18px',\n    fontWeight: 400,\n    color: '#666',\n  },\n  detailBox: {\n    marginTop: '32px',\n    marginLeft: '16px',\n    marginRight: '16px',\n    padding: '8px',\n    color: '#666',\n    height: '300px',\n    overflow: 'auto',\n    backgroundColor: 'white'\n  },\n  testItem: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: '8px',\n  },\n  fromType: {\n    color: 'white',\n    height: '20px',\n    marginRight: '16px',\n    fontSize: '12px'\n  },\n  green: {\n    color: '#47a23a',\n    marginLeft: '16px',\n    fontSize: '14px'\n  },\n  warn: {\n    color: '#f98300',\n    marginLeft: '16px',\n    fontSize: '14px'\n  },\n  error: {\n    color: '#ce3733',\n    marginLeft: '16px',\n    fontSize: '14px'\n  },\n  gray: {\n    color: '#666',\n    marginLeft: '16px',\n    fontSize: '14px'\n  },\n})\n\nexport default withStyles(styles)(injectIntl(Running))","import React, {Component} from 'react'\nimport {withStyles} from \"@material-ui/core\";\nimport * as PropTypes from \"prop-types\";\nimport ReactEcharts from \"echarts-for-react\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\n\nclass Result extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    testAgain: PropTypes.func,\n    testResult: PropTypes.object,\n    testingItems: PropTypes.array,\n    intl: PropTypes.object\n  }\n\n  getOption = () => {\n    const {intl, testResult} = this.props\n    let map3Color = '#47a23a'\n    let osmColor = '#e90046'\n    return {\n      title: {\n        text: intl.formatMessage({id: 'compareResult'})\n      },\n      tooltip: {\n        trigger: 'axis',\n        formatter: function (datas) {\n          let res = `<strong>Zoom Level ${datas[0].name.split('-')[1]}</strong><br/><br/>` //, val;\n          if (datas[0])\n            res += `map3 ${intl.formatMessage({id: 'avgTime'})}: ${datas[0].value.toFixed(1)} ms<br/>`\n          if (datas[1])\n            res += `map3 ${intl.formatMessage({id: 'minTime'})}: ${datas[1].value.toFixed(1)} ms<br/>`\n          if (datas[2])\n            res += `map3 ${intl.formatMessage({id: 'maxTime'})}: ${(datas[2].value + datas[1].value).toFixed(1)} ms<br/><br/>`\n\n          if (datas[3])\n            res += `osm ${intl.formatMessage({id: 'avgTime'})}: ${datas[3].value.toFixed(1)} ms<br/>`\n          if (datas[4])\n            res += `osm ${intl.formatMessage({id: 'minTime'})}: ${datas[4].value.toFixed(1)} ms<br/>`\n          if (datas[5])\n            res += `osm ${intl.formatMessage({id: 'maxTime'})}: ${(datas[5].value + datas[4].value).toFixed(1)} ms<br/>`\n          // for (let i = 0, length = datas.length; i < length; i++) {\n          //   val = (datas[i].value) + ' ms';\n          //   res += datas[i].seriesName + '：' + val + '<br/>';\n          // }\n          return res;\n        },\n      },\n      legend: {\n        data: ['map3', 'OpenStreetMap(osm)']\n      },\n      grid: {\n        left: '4%',\n        right: '4%',\n        bottom: '10%',\n        containLabel: true\n      },\n      xAxis: [\n        {\n          type: 'category',\n          boundaryGap: true,\n          name: intl.formatMessage({id: 'fineness'}),\n          nameLocation: 'center',\n          nameTextStyle: {\n            fontWeight: 'bold',\n            fontSize: '14'\n          },\n          nameGap: 30,\n          splitLine: {show: false},\n          data: function () {\n            let list = []\n            for (let i = 1; i <= 14; i++) {\n              list.push(`L-${i}`)\n            }\n            return list\n          }()\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          name: intl.formatMessage({id: 'loadTime'}),\n          nameLocation: 'center',\n          nameTextStyle: {\n            fontWeight: 'bold',\n            fontSize: '14'\n          },\n          nameGap: 78,\n          axisLabel: {\n            formatter: '{value} ms'\n          }\n        },\n      ],\n      series: [\n        {\n          name: 'map3Avg',\n          type: 'line',\n          itemStyle: {\n            color: map3Color,\n            borderColor: map3Color,\n          },\n          smooth: true,\n          symbolOffset: ['-50%', 0],\n          data: function () {\n            let map3Data = testResult.map3\n            let list = []\n            for (let i = 0; i < map3Data.length; i++) {\n              list.push(map3Data[i][2])\n            }\n            return list\n          }()\n        },\n        {\n          name: 'map3Min',\n          type: 'bar',\n          stack: 'map3',\n          itemStyle: {\n            normal: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            },\n            emphasis: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            }\n          },\n          data: function () {\n            let map3Data = testResult.map3\n            let list = []\n            for (let i = 0; i < map3Data.length; i++) {\n              list.push(map3Data[i][0])\n            }\n            return list\n          }()\n        },\n        {\n          name: 'map3',\n          type: 'bar',\n          stack: 'map3',\n          barWidth: 2,\n          itemStyle: {\n            color: map3Color,\n            borderColor: map3Color,\n          },\n          data: function () {\n            let map3Data = testResult.map3\n            let list = []\n            for (let i = 0; i < map3Data.length; i++) {\n              list.push(map3Data[i][1] - map3Data[i][0])\n            }\n            return list\n          }()\n        },\n        {\n          name: 'osmAvg',\n          type: 'line',\n          // areaStyle: {normal: {}},\n          itemStyle: {\n            color: osmColor,\n            borderColor: osmColor,\n          },\n          smooth: true,\n          symbolOffset: ['50%', 0],\n          data: function () {\n            let osmData = testResult.osm\n            let list = []\n            for (let i = 0; i < osmData.length; i++) {\n              list.push(osmData[i][2])\n            }\n            return list\n          }()\n        },\n        {\n          name: 'osmMin',\n          type: 'bar',\n          stack: 'osm',\n          itemStyle: {\n            normal: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            },\n            emphasis: {\n              barBorderColor: 'rgba(0,0,0,0)',\n              color: 'rgba(0,0,0,0)'\n            }\n          },\n          data: function () {\n            let osmData = testResult.osm\n            let list = []\n            for (let i = 0; i < osmData.length; i++) {\n              list.push(osmData[i][0])\n            }\n            return list\n          }()\n        },\n        {\n          name: 'OpenStreetMap(osm)',\n          type: 'bar',\n          stack: 'osm',\n          barWidth: 2,\n          barGap: '100%',\n          itemStyle: {\n            color: osmColor,\n            borderColor: osmColor,\n          },\n          data: function () {\n            let osmData = testResult.osm\n            let list = []\n            for (let i = 0; i < osmData.length; i++) {\n              list.push(osmData[i][1] - osmData[i][0])\n            }\n            return list\n          }()\n        },\n      ]\n    };\n  }\n\n  render() {\n    const {classes, testAgain} = this.props;\n    return (\n      <div className={classes.root}>\n        <ReactEcharts\n          option={this.getOption()}\n          style={{height: '350px', width: '90%'}}\n          notMerge={false}\n          className='react_for_echarts'/>\n\n        <Button onClick={testAgain} variant=\"contained\" size=\"large\" color=\"primary\"\n                className={classes.btnTestAgain}>\n          <FormattedMessage id='testAgain'/>\n        </Button>\n\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: '40px',\n  },\n  btnTestAgain: {\n    marginTop: '40px',\n  }\n})\n\nexport default withStyles(styles)(injectIntl(Result))","export const REQUEST_CHANGE_USER_NAME = 'requestChangeUserName'\nexport const RECEIVED_USER_NAME = 'receivedUserName';\nexport const REQUEST_USER_NAME_FAIL = 'requestUserNameFail'\nexport const CANCEL_REQUEST_USER_NAME = 'cancelRequestUserName'\n\n//process\n// export const CHANGE_PROCESS_STATE = 'changeProcessState'\n// export const SET_SELECTED_SAMPLE_COORDINATE = 'setSelectedSampleCoordinate'\nexport const ADD_USER_LOCATION_COORDINATE = 'addUserLocationCoordinate'\n\nexport const BENCHMARK = 'benchmark'\nexport const PRE_START = 'preStart'\n// export const TICK_RESULT = 'tickResult'\nexport const TICK_RUNNING_ITEM = 'tickRunningItem'\nexport const TICK_CALCULATE_RESULT = 'calculateItemResult'\nexport const TICK_ERROR_ITEM = 'tickErrorItem'\nexport const TICK_FINISH_ITEM = 'tickFinishItem'\nexport const FINISH_BENCKMARK = 'finishBenchmark'\nexport const TEST_AGAIN = 'testAgain'\n// export const SET_TEST_RESULT = 'setTestResult'\n\n//locale\nexport const CHANGE_LANGUAGE = 'changeLanguage'","import * as ActionTypes from \"./actionTypes\";\n\n// export function setProcessState(state) {\n//   return {\n//     type: ActionTypes.CHANGE_PROCESS_STATE,\n//     payload: state\n//   }\n// }\n\n// export function setSelectedSampleCoordinate(sampleId) {\n//   return {\n//     type: ActionTypes.SET_SELECTED_SAMPLE_COORDINATE,\n//     payload: sampleId\n//   }\n// }\n\nexport function addUserLocationSample(userSample) {\n  return {\n    type: ActionTypes.ADD_USER_LOCATION_COORDINATE,\n    userSample\n  }\n}\n\nexport function benchmark(sample) {\n  return {\n    type: ActionTypes.BENCHMARK,\n    sample\n  }\n}\n\nexport function preStart(requestNum) {\n  return {\n    type: ActionTypes.PRE_START,\n    requestNum\n  }\n}\n\n// export function setTestResult(result) {\n//   return {\n//     type: ActionTypes.SET_TEST_RESULT,\n//     payload: result\n//   }\n// }\n\n// export function tickResult(item) {\n//   return {\n//     type: ActionTypes.TICK_RESULT,\n//     payload: item\n//   }\n// }\n\nexport function tickRunningItem(item) {\n  return {\n    type: ActionTypes.TICK_RUNNING_ITEM,\n    item\n  }\n}\n\nexport function calculateItemTiming(item) {\n  return {\n    type: ActionTypes.TICK_CALCULATE_RESULT,\n    item\n  }\n}\n\nexport function tickErrorItem(item, error) {\n  return {\n    type:ActionTypes.TICK_ERROR_ITEM,\n    item,\n    error\n  }\n}\n\nexport function tickFinishItem(item) {\n  return {\n    type: ActionTypes.TICK_FINISH_ITEM,\n    item\n  }\n}\n\nexport function finishBenchmark(maxLevel) {\n  return {\n    type: ActionTypes.FINISH_BENCKMARK,\n    maxLevel\n  }\n}\n\nexport function testAgain() {\n  return {\n    type: ActionTypes.TEST_AGAIN\n  }\n}","const CONSTS = {\n  PROCESS_STATE_START: 1,\n  PROCESS_STATE_RUNNING: 2,\n  PROCESS_STATE_FINISH: 3,\n}\n\nexport default CONSTS","import en_US from \"./en_US\";\nimport zh_CN from \"./zh_CN\";\nimport id_ID from \"./id_ID\";\n\nexport const supportedLocales = [\n  {lang: 'en', desc: 'English', messages: en_US},\n  {lang: 'zh', desc: '简体中文', messages: zh_CN},\n  // {lang: 'id', desc: 'Bahasa Indonesia', messages: id_ID},\n]","const en_US = {\n  title: 'Benchmark of map service quality',\n  selectLocationLabel: 'Select targeted map data',\n  start: 'Start',\n  testRunningLabel: 'Running test {where}',\n  testAgain: 'Test again',\n  compareResult: 'Test result',\n  avgTime: 'avg time',\n  minTime: 'min time',\n  maxTime: 'max time',\n  myPosition: 'My location',\n  loadTime: 'load time',\n  fineness: 'graininess',\n  BandungCityPark: 'Bandung City Plaza',\n  BandungShoppingCenter: 'Bandung Shopping Center',\n  JakartaMilitaryMuseum: 'Jakarta Military Museum',\n  JakartaGBKS: 'Jakarta Gloria Bung Karno Stadium'\n}\n\nexport default en_US","const zh_CN = {\n  title: '地图服务质量测试',\n  selectLocationLabel: '选择测试位置：',\n  start: '启动',\n  testRunningLabel: '正在测试 {where}',\n  testAgain: '再测一次',\n  compareResult: '测速结果',\n  avgTime: '平均时间',\n  minTime: '最小时间',\n  maxTime: '最大时间',\n  myPosition: '我的位置',\n  loadTime: '加载时间',\n  fineness: '精细度',\n  BandungCityPark: '万隆城市广场',\n  BandungShoppingCenter: '万隆购物中心',\n  JakartaMilitaryMuseum: '雅加达军事博物馆',\n  JakartaGBKS: '雅加达格罗拉蓬卡诺体育场'\n}\n\nexport default zh_CN","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withStyles} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Start from \"../components/Start\";\nimport Running from \"../components/Running\";\nimport Result from \"../components/Result\";\nimport {\n  addUserLocationSample,\n  benchmark,\n  changeLanguage,\n  finishBenchmark,\n  testAgain,\n  tickFinishItem\n} from \"../actions\";\n\nimport CONSTS from \"../const/consts\";\n\nimport {supportedLocales} from \"../locale\";\n\nimport en from 'react-intl/locale-data/en'\nimport zh from 'react-intl/locale-data/zh'\nimport id from 'react-intl/locale-data/id'\n\nimport {addLocaleData, FormattedMessage, injectIntl} from \"react-intl\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\naddLocaleData([...en, ...zh, ...id])\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {},\n  input: {\n    color: 'white',\n    position: 'relative',\n    fontSize: 16,\n    width: 'auto',\n    minWidth: '70px',\n    textAlign: 'right',\n  },\n}))(InputBase);\n\nclass Main extends Component {\n\n  state = {\n    open: false,\n  }\n\n  _launch = (selectedId) => {\n    // console.log(performance.getEntriesByType(\"resource\"))\n    // return\n    let samples = this.props.process.sampleCoords\n    let sampleMatchList = samples.filter(sample => sample.id === selectedId)\n    if (sampleMatchList && sampleMatchList.length > 0) {\n      let sample = sampleMatchList[0]\n      this.props.benchmark(sample)\n    }\n  }\n\n  _testAgain = () => {\n    this.props.testAgain()\n  }\n\n  _getLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      let userCoordinateItem = {\n        id: 1,\n        intlId: 'myPosition',\n        coordinate: {longitude: position.coords.longitude, latitude: position.coords.latitude}\n      }\n      this.props.addUserLocationSample(userCoordinateItem)\n    }, (error) => {\n      console.log(error)\n    })\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this._getLocation()\n    }, 200)\n\n    // this.observer = new PerformanceObserver((list, obj) => {\n    //   let entries = list.getEntries()\n    //   for (let i = 0; i < entries.length; i++) {\n    //     console.log(entries[i], entries[i].name)\n    //     let url = entries[i].name\n    //     // let res = newResultItemByUrlAndPerformanceResTiming(url, entries[i])\n    //     // if (res) {\n    //     //   this.props.tickFinishItem(res)\n    //     // }\n    //   }\n    // })\n    // this.observer.observe({entryTypes: ['resource']})\n  }\n\n  // componentWillUnmount() {\n  //   this.observer.disconnect()\n  // }\n\n  handleLanguageChange = event => {\n    this.props.changeLanguage(event.target.value)\n  }\n\n  handleClose = () => {\n    this.setState({open: false});\n  };\n\n  handleOpen = () => {\n    this.setState({open: true});\n  };\n\n  render() {\n    const {classes, process, locales} = this.props\n    let stepView\n    switch (process.state) {\n      case CONSTS.PROCESS_STATE_START:\n        stepView = <Start\n          launch={this._launch}\n          sampleCoords={process.sampleCoords}\n        />\n        break\n      case CONSTS.PROCESS_STATE_RUNNING:\n        stepView = <Running testingItems={process.testingItems}\n                            testingSample={process.testingSample}\n                            requestNum={process.requestNum}\n        />\n        break\n      case CONSTS.PROCESS_STATE_FINISH:\n        stepView = <Result testAgain={this._testAgain}\n                           testingItems={process.testingItems}\n                           testResult={process.testResult}/>\n        break\n      default:\n        stepView = <div/>\n    }\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <img src=\"img/logo.svg\" alt='logo' className={classes.logoImg}/>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <FormattedMessage\n                id='title'\n                description='title of website'\n              />\n            </Typography>\n\n            <div>\n              <FormControl className={classes.languageFormControl}>\n                <Select\n                  open={this.state.open}\n                  onClose={this.handleClose}\n                  onOpen={this.handleOpen}\n                  value={locales.lang}\n                  onChange={this.handleLanguageChange}\n                  IconComponent={() => {\n                    return <div/>\n                  }}\n                  input={<BootstrapInput name=\"age\" id=\"age-customized-select\"/>}\n                >\n                  {\n                    supportedLocales.map(locale => {\n                      return <MenuItem key={locale.lang}\n                                       value={locale.lang}>{locale.desc}</MenuItem>\n                    })\n                  }\n                </Select>\n              </FormControl>\n            </div>\n\n            {/*<Button onClick={() => {sessionStorage.setItem('lang', 'en'); this.props.changeLanguage('en')}}>English</Button>*/}\n            {/*<Button onClick={() => {sessionStorage.setItem('lang', 'zh'); this.props.changeLanguage('zh')}}>中文</Button>*/}\n          </Toolbar>\n        </AppBar>\n\n        <div className={classes.content}>\n          {stepView}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '100vh',\n    width: '100%',\n  },\n  content: {},\n  grow: {\n    flexGrow: 1,\n    color: '#fff'\n  },\n  logoImg: {\n    width: '40px',\n    height: '40px',\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  languageFormControl: {\n    color: 'white'\n  }\n})\n\n//see: https://react-redux.js.org/api/connect\nexport default connect(\n  (state, ownProps) => ({\n    userName: state.user.userName,\n    userNameState: state.user.userNameState,\n    process: state.process,\n    locales: state.locales\n  }),               //mapStateToProps\n  {\n    addUserLocationSample,\n    benchmark,\n    testAgain,\n    tickFinishItem,\n    finishBenchmark,\n    changeLanguage\n  }                //mapDispatchToProps\n)(withStyles(styles)(injectIntl(Main)))","import * as ActionTypes from \"./actionTypes\";\n\nexport function changeLanguage(lang) {\n  return {\n    type: ActionTypes.CHANGE_LANGUAGE,\n    lang\n  }\n}","import React from 'react';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import {lightBlue, green} from \"@material-ui/core/colors\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme(\n  {\n    // palette: {\n    //   primary: {\n    //     light: lightBlue[300],\n    //     main: lightBlue[500],\n    //     dark: lightBlue[700],\n    //   },\n    //   secondary: {\n    //     light: green[300],\n    //     main: green[500],\n    //     dark: green[700],\n    //   },\n    // },\n    typography: {\n      useNextVariants: true,\n    },\n  }\n);\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline/>\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import * as ActionTypes from '../actions/actionTypes'\n\nconst userState = {\n  userName: 'LiLei',\n  userNameState: {\n    loading: false,\n    errorMsg: '',\n    canceled: false\n  }\n}\n\nexport default function userReducer(state = userState, action) {\n  switch (action.type) {\n    case ActionTypes.REQUEST_CHANGE_USER_NAME:\n      return {...state, userNameState: {loading: true, errorMsg: ''}}\n    case ActionTypes.RECEIVED_USER_NAME:\n      return {...state, userName: action.payload, userNameState: {loading: false, errorMsg: ''}}\n    case ActionTypes.REQUEST_USER_NAME_FAIL:\n      return {...state, userNameState: {loading: false, errorMsg: action.payload}}\n    case ActionTypes.CANCEL_REQUEST_USER_NAME:\n      return {...state, userNameState: {canceled: true}}\n    default:\n      return state\n  }\n}","import * as ActionTypes from '../actions/actionTypes'\nimport CONSTS from \"../const/consts\";\n\nconst processState = {\n  state: CONSTS.PROCESS_STATE_START,\n  sampleCoords: [\n    {id: 2, intlId: 'BandungCityPark', coordinate: {longitude: 107.607190, latitude: -6.921487}},\n    {id: 3, intlId: 'BandungShoppingCenter', coordinate: {longitude: 107.605327, latitude: -6.893337}},\n    // {id: 4, intlId: 'JakartaMilitaryMuseum', coordinate: {longitude: 106.818498, latitude: -6.231728}}\n    {id: 5, intlId: 'JakartaGBKS', coordinate: {longitude: 106.802769, latitude: -6.218696}}\n  ],\n  testingSample: {},  //正在测试的地理数据\n  testResult: {},     //用于charts的数据\n  requestNum: 0,     //主要用于计算倒计时百分比\n  testingItems: []   //正在测试中的请求items\n}\n\nexport default function processReducer(state = processState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_USER_LOCATION_COORDINATE:\n      let sampleCoords = state.sampleCoords\n      let userCoordinateItem = action.userSample\n      //remove if exist\n      for (let i = 0; i < sampleCoords.length; i++) {\n        const sample = sampleCoords[i]\n        if (sample.id === userCoordinateItem.id) {\n          sampleCoords.splice(i, 1)\n          break\n        }\n        i++\n      }\n      sampleCoords.unshift(userCoordinateItem)\n      return {...state, sampleCoords}\n    case ActionTypes.BENCHMARK:\n      return {\n        ...state,\n        state: CONSTS.PROCESS_STATE_RUNNING,\n        testingSample: action.sample,\n        testResult: {},\n        testingItems: []\n      }\n    case ActionTypes.PRE_START:   //需要做一些计算才能得到一些初始化的数据\n      return {\n        ...state,\n        requestNum: action.requestNum\n      }\n    // case ActionTypes.TICK_RUNNING_ITEM:  //添加正在运行item\n    //   state.testingItems.push(action.item)\n    //   return {...state}\n    case ActionTypes.TICK_CALCULATE_RESULT:  //when request finish, add item\n      state.testingItems.push(action.item)\n      return {...state}\n    case ActionTypes.TICK_FINISH_ITEM:  //item完成timing计算\n      let testingItems = state.testingItems\n      let id = findTestingItemIdx(testingItems, action.item)\n      if (id !== -1) {\n        testingItems[id] = {...testingItems[id], ...action.item}\n        return {...state}\n      }\n      return state\n    // state.testingItems.push(action.item)\n    // return {...state}\n    case ActionTypes.TICK_ERROR_ITEM:\n      // let id2 = findTestingItemIdx(state.testingItems, action.item)\n      // if (id2 !== -1) {\n      //   state.testingItems[id2] = {...state.testingItems[id2], ...action.item}\n      //   return {...state}\n      // }\n      // return state\n      state.testingItems.push(action.item)\n      return {...state}\n    case ActionTypes.FINISH_BENCKMARK:\n      let res = testingItemsForCharts(state.testingItems, action.maxLevel)\n      return {...state, state: CONSTS.PROCESS_STATE_FINISH, testResult: res}\n    case ActionTypes.TEST_AGAIN:\n      return {...state, testResult: {}, state: CONSTS.PROCESS_STATE_START}\n    default:\n      return state\n  }\n}\n\nfunction findTestingItemIdx(testingItems, searchItem) {\n  for (let i = testingItems.length - 1; i >= 0; i--) {\n    if (testingItems[i].id === searchItem.id) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction testingItemsForCharts(testingItems, maxLevel) {\n  let res = {}\n\n  let types = ['osm', 'map3']\n  let levelVar = {}\n  //init vars\n  types.forEach(type => {\n    for (let z = 1; z <= maxLevel; z++) {\n      if (!levelVar[type]) {\n        levelVar[type] = {}\n      }\n      if (!levelVar[type][z]) {\n        levelVar[type][z] = {}\n      }\n      levelVar[type][z]['min'] = 0\n      levelVar[type][z]['max'] = 0\n      levelVar[type][z]['avg'] = 0\n      levelVar[type][z]['sum'] = 0\n      levelVar[type][z]['count'] = 0\n      levelVar[type][z]['hadSet'] = false\n    }\n  })\n\n  testingItems.forEach(testItem => {\n    let z = parseInt(testItem.z)\n    if (testItem.state === 'finish') {\n      if (levelVar[testItem.type][z]['min'] === 0 && levelVar[testItem.type][z]['max'] === 0) { // first item fire\n        levelVar[testItem.type][z]['min'] = testItem.duration\n        levelVar[testItem.type][z]['max'] = testItem.duration\n      } else {\n        if (testItem.duration > levelVar[testItem.type][z]['max']) {\n          levelVar[testItem.type][z]['max'] = testItem.duration\n        }\n        if (testItem.duration < levelVar[testItem.type][z]['min']) {\n          levelVar[testItem.type][z]['min'] = testItem.duration\n        }\n      }\n\n      levelVar[testItem.type][z]['sum'] += testItem.duration\n      levelVar[testItem.type][z]['count'] += 1\n      levelVar[testItem.type][z]['hadSet'] = true\n    }\n  })\n\n  types.forEach(type => {\n    res[type] = []\n    for (let z = 1; z <= maxLevel; z++) {\n      if (levelVar[type][z]['hadSet']) {\n        let avgTime = levelVar[type][z]['sum'] / levelVar[type][z]['count']\n        // let avgTime = (levelVar[type][z]['min'] + levelVar[type][z]['max']) / 2\n        res[type].push([levelVar[type][z]['min'], levelVar[type][z]['max'], avgTime])\n      } else {\n        res[type].push([0, 0, 0])\n      }\n    }\n  })\n\n  return res\n}","import * as ActionTypes from '../actions/actionTypes'\n\nimport {supportedLocales} from \"../locale\";\n\nlet lang = sessionStorage.getItem('lang')\nif (!lang) {\n  lang = navigator.language.split('-')[0]\n  console.log(lang)\n}\nlet selectedLocale = findLocale(lang)\n\nconst localeState = {\n  ...selectedLocale\n}\n\nexport default function localeReducer(state = localeState, action) {\n  switch (action.type) {\n    case ActionTypes.CHANGE_LANGUAGE:\n      let locale = findLocale(action.lang)\n      return {...locale}\n    default:\n      return state\n  }\n}\n\nfunction findLocale(lang) {\n  let locale = supportedLocales[0]\n  for (let i = 0; i < supportedLocales.length; i++) {\n    if (supportedLocales[i].lang === lang) {\n      locale = supportedLocales[i]\n      break\n    }\n  }\n  return locale\n}","import {combineReducers} from \"redux\";\n\nimport user from './userReducer'\nimport process  from './processReducer'\nimport locales from './localesReducer'\n\nexport default combineReducers({\n  user,\n  process,\n  locales\n})","import * as Observable from \"rxjs\";\nimport {delay, map} from \"rxjs/operators\";\n\nexport const api = {\n  userName() {\n    return Observable.from(fetch(\"https://www.baidu.com/\", {mode: 'no-cors'})).pipe(\n      delay(1000),\n      map(ret => {\n        const ramdom = Math.random() >= 0.495\n        if (ramdom) {\n          return 'Moo' + ramdom\n        } else {\n          throw new Error('my error')\n        }\n      })\n    )\n  }\n}","//see: https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\n\nfunction long2tile(lon, zoom) {\n  return (Math.floor((lon + 180) / 360 * Math.pow(2, zoom)));\n}\n\nfunction lat2tile(lat, zoom) {\n  return (Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom)));\n}\n\nfunction tile2long(x, z) {\n  return (x / Math.pow(2, z) * 360 - 180);\n}\n\nfunction tile2lat(y, z) {\n  let n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n  return (180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))));\n}\n\nexport class Tile {\n  constructor(z, x, y, lat, long) {\n    this.z = z\n    this.x = x\n    this.y = y\n    this.lat = lat\n    this.long = long\n  }\n\n  deg2num() {\n    this.x = long2tile(this.long, this.z)\n    this.y = lat2tile(this.lat, this.z)\n  }\n\n  num2deg() {\n    this.long = tile2long(this.x, this.z)\n    this.lat = tile2lat(this.y, this.z)\n  }\n\n  osmTileUrl() {\n    return `https://c.tile.openstreetmap.org/${this.z}/${this.x}/${this.y}.png`\n  }\n\n  map3TileUrl() {\n    return `https://tile.map3.network/v1/api/tile/${this.z}/${this.x}/${this.y}.pbf`\n    // https://120-79-153-67.tile.map3.network/\n    // return `https://120-79-153-67.tile.map3.network/v1/api/tile/${this.z}/${this.x}/${this.y}.pbf`\n  }\n}\n\nexport class BBoxTile {\n  constructor(topLeftTile, bottomRightTile) {\n    this.topLeftTile = topLeftTile\n    this.bottomRightTile = bottomRightTile\n  }\n}\n\nexport class BBoxLatLong {\n  constructor(topLeftLat, topLeftLong, bottomRightLat, bottomRightLong) {\n    this.topLeftLat = topLeftLat\n    this.topLeftLong = topLeftLong\n    this.bottomRightLat = bottomRightLat\n    this.bottomRightLong = bottomRightLong\n  }\n}\n\nexport function newTileWithLatLong(lat, long, z) {\n  let tile = new Tile(z, 0, 0, lat, long)\n  tile.deg2num()\n  return tile\n}\n\nexport function newTileWithXY(x, y, z) {\n  let tile = new Tile(z, x, y)\n  tile.num2deg()\n  return tile\n}\n\nexport function bboxTilesFromTile(topTile, bottomTile, minZ, maxZ) {\n  let tiles = []\n  if (minZ > maxZ) {\n    return tiles\n  }\n\n  for (let z = minZ; z <= maxZ; z++) {\n    let tTopLeft = newTileWithLatLong(topTile.lat, topTile.long, z)\n    let tBottomRight = newTileWithLatLong(bottomTile.lat, bottomTile.long, z)\n    for (let x = tTopLeft.x; x <= tBottomRight.x; x++) {\n      for (let y = tTopLeft.y; y <= tBottomRight.y; y++) {\n        let tile = newTileWithXY(x, y, z)\n        tiles.push(tile)\n      }\n    }\n  }\n  return tiles\n}\n\nexport function bboxTilesFromCoor(topLat, topLong, bottomLat, bottomLong, minZ, maxZ) {\n  let t1 = newTileWithLatLong(topLat, topLong, minZ)\n  let t2 = newTileWithLatLong(bottomLat, bottomLong, minZ)\n  return bboxTilesFromTile(t1, t2, minZ, maxZ)\n}","export const hashCode = function (s) {\n  let h = 0, l = s.length, i = 0;\n  if (l > 0)\n    while (i < l)\n      h = (h << 5) - h + s.charCodeAt(i++) | 0;\n  return h;\n};\n\nexport const groupBy = function (xs, key) {\n  return xs.reduce(function (rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n};","import {newTileWithLatLong} from \"../geomaths/tilemath\";\nimport {from, range, of} from \"rxjs\";\nimport {concatMap} from \"rxjs/operators\";\nimport {hashCode} from \"../util/util\";\n\nfunction _fetch(fetch_promise, timeout) {\n  let abort_fn = null;\n\n  let abort_promise = new Promise(function (resolve, reject) {\n    abort_fn = function () {\n      reject('abort promise');\n    };\n  });\n\n  let abortable_promise = Promise.race([\n    fetch_promise,\n    abort_promise\n  ]);\n\n  setTimeout(function () {\n    abort_fn();\n  }, timeout);\n\n  return abortable_promise;\n}\n\nfunction fetchObs(url, z) {\n  // let cors = url.includes('osm_tile') ? 'cors' : 'no-cors'\n  // let myHeaders = new Headers({\n  //   // 'Access-Control-Allow-Origin': '*',\n  //   'pragma': 'no-cache',\n  //   'cache-control': 'no-cache'\n  // });\n  let myInit = {\n    // headers: myHeaders,\n    mode: 'no-cors',\n    cache: \"no-cache\",\n  }\n  return from(_fetch(fetch(`${url}&t=${(new Date()).getTime()}`, myInit), 5000).then(res => {\n      // console.log(res)\n      let item = newResultItemByUrlAndZ(url, z)\n      return {'what': 'requestFinish', item: (item || {id: hashCode(url), url})}\n    }, error => {\n      console.log(error)\n      let item = newResultItemByUrlAndZ(url, z)\n      if(item) {\n        item['state'] = 'error'\n      }\n      return {'what': 'requestError', item: (item || {id: hashCode(url), url, state: 'error'})}\n    })\n  )\n}\n\nexport class TileTestTask {\n  constructor(tile, requestTimes = 10) {\n    this.tile = tile\n    this.requestTimes = requestTimes\n  }\n\n  start() {\n    return range(1, this.requestTimes).pipe(\n      concatMap(i => {\n        return of(`${this.tile.osmTileUrl()}?osm_tile_t=${i}`, `${this.tile.map3TileUrl()}?map3_tile_t=${i}`)\n      }),\n      concatMap(url => {\n        return from(fetchObs(url, this.tile.z))\n      }),\n    )\n  }\n}\n\nexport function resourceTimingDuration(item) {\n  let url = `${item.url}?${item.type}_tile_t=${item.tick}`\n  // let resources = performance.getEntriesByName(url, \"resource\")\n  let resources = performance.getEntriesByType(\"resource\")\n  for (let i = resources.length - 1; i >= 0; i--) {\n    let resource = resources[i]\n    if (resource.name.includes(url)) {\n      // console.log(resource)\n      return getResourceDuration(resource)\n    }\n  }\n  return -1\n}\n\n//see: https://developer.mozilla.org/zh-CN/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API\nfunction getResourceDuration(resource) {\n  // let redirectTime = resource.redirectEnd - resource.redirectStart;\n  // let dnsTime = resource.domainLookupEnd - resource.domainLookupStart\n  // let tcpTime = resource.connectEnd - resource.connectStart\n  // let secureConnectTime = (resource.secureConnectionStart > 0) ? resource.connectEnd - resource.secureConnectionStart : 0\n  // let fetchResponseTime = resource.responseEnd - resource.fetchStart\n  return resource.responseEnd - resource.startTime\n}\n\nexport function generateTestTiles(latitude, longitude, maxLevel = 14) {\n  let tiles = []\n  for (let level = 1; level <= maxLevel; level++) {\n    let tile = newTileWithLatLong(latitude, longitude, level)\n    tiles.push(tile)\n  }\n  return tiles\n}\n\nexport function newResultItemByUrlAndZ(url, z) {\n  let res = newResultItemByUrl(url)\n  if (res) {\n    res.z = z\n  }\n  return res\n}\n\nexport function newResultItemByUrl(url) {\n  if (url && typeof url == 'string') {\n    let splitTarget = [{type: 'osm', t: '?osm_tile_t='}, {type: 'map3', t: '?map3_tile_t='}]\n    for (let i = 0; i < splitTarget.length; i++) {\n      let target = splitTarget[i]\n      let urls = url.split(target.t)\n      if (urls.length > 1) {\n        return {\n          id: hashCode(url),\n          url: urls[0],\n          tick: urls[1],\n          type: target.type,\n          state: 'running',\n          duration: 0\n        }\n      }\n    }\n  }\n  return null\n}\n\nexport function newResultItemByUrlAndPerformanceResTiming(url, perfResTiming) {\n  let res = newResultItemByUrl(url)\n  if (res) {\n    res['duration'] = perfResTiming.duration\n    res['state'] = 'finish'\n    return res\n  }\n  return null\n}","import {combineEpics} from \"redux-observable\";\n\nimport {requestUserName} from './userEpics'\nimport {benchmark, calculateTiming} from \"./processEpics\";\n\nexport default combineEpics(\n  requestUserName,\n  benchmark,\n  calculateTiming\n)","import {ofType} from \"redux-observable\";\nimport * as ActionTypes from '../actions/actionTypes'\nimport {catchError, map, mergeMap, takeUntil, filter} from \"rxjs/operators\";\nimport {api} from \"../services/api\";\nimport {of} from 'rxjs'\n\n//see: https://redux-observable.js.org/\nexport const requestUserName = actions$ => actions$.pipe(\n  ofType(ActionTypes.REQUEST_CHANGE_USER_NAME),\n  mergeMap(action => {\n    return api.userName().pipe(\n      map(name => ({type: ActionTypes.RECEIVED_USER_NAME, payload: name.toUpperCase()})),\n      takeUntil(actions$.pipe(\n        filter(action => action.type === ActionTypes.CANCEL_REQUEST_USER_NAME)\n      )),\n      catchError(error => of({type: ActionTypes.REQUEST_USER_NAME_FAIL, payload: error.message})))\n  })\n)","import {ofType} from \"redux-observable\";\nimport * as ActionTypes from '../actions/actionTypes'\nimport {mergeMap, concatMap, map, delay} from \"rxjs/operators\";\nimport {Observable, of} from 'rxjs'\nimport {generateTestTiles, resourceTimingDuration, TileTestTask} from \"../benchmark/benchmark\";\nimport {\n  calculateItemTiming,\n  finishBenchmark,\n  preStart,\n  tickErrorItem, tickFinishItem,\n  tickRunningItem\n} from \"../actions\";\n\nconst maxLevel = 14\nconst requestTimesOfEachTile = 6\n\n//see:\n// https://cn.rx.js.org/class/es6/Observable.js~Observable.html#instance-method-concatMap\n// https://redux-observable.js.org/docs/basics/Epics.html\nexport const benchmark = (actions$, state$) => {\n  return actions$.pipe(\n    ofType(ActionTypes.BENCHMARK),\n    mergeMap(action => {\n      performance.clearResourceTimings();\n      performance.setResourceTimingBufferSize(5000);\n\n      let sample = action.sample\n      let tiles = generateTestTiles(sample.coordinate.latitude, sample.coordinate.longitude, maxLevel)\n      let requestNum = 2 * tiles.length * requestTimesOfEachTile\n      return of({what: 'setRequestNum', num: requestNum}, ...tiles, {what: 'finish'})\n    }),\n    concatMap(act => {\n      if (act['what'] === 'finish') {\n        // delay 3s to wait for calculate timing result\n        return of(act).pipe(\n          delay(3000)\n        )\n      } else if (act['what'] === 'setRequestNum') {\n        return of(act)\n      } else {  // tile\n        return (new TileTestTask(act, requestTimesOfEachTile)).start()\n      }\n    }),\n    map(act => {\n      if (act['what'] === 'finish') {\n        postResult(state$.value.process)\n        return finishBenchmark(maxLevel)\n        // return {type:'tt'}\n      } else if (act['what'] === 'setRequestNum') {\n        return preStart(act['num'])\n      } else {  // is tile\n        if (act['what'] === 'preRequest') {\n          return tickRunningItem(act.item)\n        } else if (act['what'] === 'requestFinish') {\n          return calculateItemTiming(act.item)\n        } else if (act['what'] === 'requestError') {\n          return tickErrorItem(act.item, act.error)\n        }\n      }\n    }),\n  )\n}\n\nexport const calculateTiming = actions$ => {\n  return actions$.pipe(\n    ofType(ActionTypes.TICK_CALCULATE_RESULT),\n    delay(500),\n    mergeMap(action => {\n      return new Observable(emitter => {\n        let retryTimes = 10\n        let calculateFun = () => {\n          let item = action.item\n          let duration = resourceTimingDuration(item)\n          if (duration === -1) {\n            if (retryTimes > 0) {\n              setTimeout(() => {\n                calculateFun()\n                retryTimes--\n              }, 500)\n            } else {\n              // emitter.error(`Cannot find ${item.url} timing resource`)\n              item['state'] = 'error'\n              emitter.next(item)\n              emitter.complete()\n            }\n          } else {\n            item['duration'] = duration\n            item['state'] = 'finish'\n            emitter.next(item)\n            emitter.complete()\n          }\n        }\n\n        calculateFun()\n      })\n    }),\n    map(item => {\n      return tickFinishItem(item)\n    })\n  )\n}\n\nfunction postResult(processState) {\n  let params = {\n    ip: '',\n    coordinates: [],\n    map3: [],\n    osm: []\n  }\n  params.coordinates.push(processState.testingSample.coordinate.longitude)  //纬度\n  params.coordinates.push(processState.testingSample.coordinate.latitude) //经度\n\n  processState.testingItems.forEach(testItem => {\n    if (testItem.state === 'finish') {\n      params[testItem.type] && params[testItem.type].push({\n        url: testItem.url,\n        response_time: testItem.duration\n      })\n    }\n  })\n\n  // fetch('http://whatismyip.akamai.com/')\n  //   .then(res => {\n  //     console.log(res)\n  //   })\n\n  // fetch('http://pv.sohu.com/cityjson?ie=utf-8')\n  //   .then(res => {\n  //     console.log(res)\n  //   })\n\n  fetch('https://adanos-analytics.map3.network/tile/adanos/record', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/x-www-form-urlencoded', // <-- Specifying the Content-Type\n    }),\n    body: `data=${JSON.stringify(params)}`\n  })\n    .then(res => res.json())\n    .then(res => console.log(res))\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport {createEpicMiddleware} from 'redux-observable';\nimport rootReducer from '../reducers';\nimport rootEpic from '../epics';\nimport logger from 'redux-logger'\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconsole.log(process.env)\n\nlet middleware = [epicMiddleware]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(logger)\n}\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(...middleware)\n    )\n  );\n  epicMiddleware.run(rootEpic);\n  return store\n}","import {connect} from 'react-redux';\nimport {IntlProvider} from 'react-intl';\n\n//see: https://github.com/yahoo/react-intl/issues/243\n\n// This function will map the current redux state to the props for the component that it is \"connected\" to.\n// When the state of the redux store changes, this function will be called, if the props that come out of\n// this function are different, then the component that is wrapped is re-rendered.\nfunction mapStateToProps(state) {\n  const {lang, messages} = state.locales;\n  return {locale: lang, key: lang, messages};\n}\n\nexport default connect(mapStateToProps)(IntlProvider);","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Typography from \"@material-ui/core/Typography\";\nimport Main from \"./containers/main\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Provider} from \"react-redux\";\nimport withRoot from \"./withRoot\";\nimport configureStore from \"./store/configureStore\";\nimport ConnectedIntlProvider from './connectedIntlProvider'\n\nconst store = configureStore()\n\nclass _App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedIntlProvider>\n          {/*<Router basename=\"/adanos\">*/}\n          {/*see: https://medium.com/@Dragonza/react-router-problem-with-gh-pages-c93a5e243819*/}\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              <Route exact={true} path=\"/\" component={Main}/>\n              <Route component={NoMatch}/>\n            </Switch>\n          </Router>\n        </ConnectedIntlProvider>\n      </Provider>\n    )\n  }\n}\n\nconst App = withRoot(_App)\n\nfunction NoMatch({location}) {\n  return (\n    <div>\n      <Typography variant={\"h6\"}>\n        Sorry, the page does not exist!\n      </Typography>\n    </div>\n  );\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}